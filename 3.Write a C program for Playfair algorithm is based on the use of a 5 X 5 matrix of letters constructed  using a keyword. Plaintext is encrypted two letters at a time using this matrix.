#include <stdio.h>
#include <string.h>
#include <ctype.h>

int main() {
    char key[25] = "MONARCHY", matrix[5][5], used[26] = {0};
    char pt[100] = "INSTRUMENTS", clean[100], ct[100];
    int i, j, k = 0, x = 0;

    // Build matrix
    for (i = 0; i < strlen(key); i++) {
        char ch = toupper(key[i]);
        if (ch == 'J') ch = 'I';
        if (!used[ch - 'A']) {
            key[k++] = ch;
            used[ch - 'A'] = 1;
        }
    }
    for (i = 0; i < 26; i++) {
        if (i + 'A' == 'J') continue;
        if (!used[i]) key[k++] = i + 'A';
    }
    k = 0;
    for (i = 0; i < 5; i++)
        for (j = 0; j < 5; j++)
            matrix[i][j] = key[k++];

    // Prepare plaintext
    k = 0;
    for (i = 0; pt[i]; i++) {
        char ch = toupper(pt[i]);
        if (ch == 'J') ch = 'I';
        if (isalpha(ch)) clean[k++] = ch;
    }
    if (k % 2 != 0) clean[k++] = 'X';
    clean[k] = '\0';

    // Encrypt
    k = 0;
    for (i = 0; i < strlen(clean); i += 2) {
        char a = clean[i], b = clean[i+1];
        int r1, c1, r2, c2;
        for (r1 = 0; r1 < 5; r1++)
            for (c1 = 0; c1 < 5; c1++)
                if (matrix[r1][c1] == a) goto found1;
        found1:
        for (r2 = 0; r2 < 5; r2++)
            for (c2 = 0; c2 < 5; c2++)
                if (matrix[r2][c2] == b) goto found2;
        found2:
        if (r1 == r2) {
            ct[x++] = matrix[r1][(c1+1)%5];
            ct[x++] = matrix[r2][(c2+1)%5];
        } else if (c1 == c2) {
            ct[x++] = matrix[(r1+1)%5][c1];
            ct[x++] = matrix[(r2+1)%5][c2];
        } else {
            ct[x++] = matrix[r1][c2];
            ct[x++] = matrix[r2][c1];
        }
    }
    ct[x] = '\0';
    printf("Encrypted: %s\n", ct);
    return 0;
}
